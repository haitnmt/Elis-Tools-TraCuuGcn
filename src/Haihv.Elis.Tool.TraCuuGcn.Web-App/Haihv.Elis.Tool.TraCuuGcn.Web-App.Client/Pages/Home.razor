@page "/"
@using Haihv.Elis.Tool.TraCuuGcn.WebLib.Services

<MudStack Class="mt-2 mx-2 mb-16" 
          Style="@(string.IsNullOrWhiteSpace(_searchQuery) && !_isCameraActive ? "height: calc((1 / 3)*(100vh - 50px))" : "")" 
          Justify="Justify.FlexEnd">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" md="6" lg="4">
            <MudStack>
                <SearchBar AutoStopCamera="true" 
                           IsCameraActiveChanged="b => _isCameraActive = b"
                           Result="@_searchQuery"
                           ResultChanged="SearchBarResultChanged"/>
                @if (!string.IsNullOrWhiteSpace(_searchQuery))
                { 
                    <ThongTinGiayChungNhan Query="@_searchQuery"
                                           @bind-Serial="@_serial"
                                           DonViChanged="donVi => _donVi = donVi"/>
                    @if (_appSettings is not null && _appSettings.IsDemoVersion && !string.IsNullOrWhiteSpace(_donVi))
                    {
                        <MudAlert Severity="Severity.Warning" ShowCloseIcon="true">
                            <MudText Typo="Typo.body2">
                                Hệ thống đang trong quá trình thử nghiệm, thông tin có thể không chính xác.
                            </MudText>
                            <MudStack Class="pt-1" Spacing="0">
                                <MudText Typo="Typo.caption">
                                    Vui lòng xác minh thông tin tại:
                                </MudText>
                                <MudText Typo="Typo.caption">
                                    @_donVi
                                </MudText>
                            </MudStack>
                        </MudAlert>
                    }
                    @if (!string.IsNullOrWhiteSpace(_serial))
                    {
                        <AuthorizeView>
                            <NotAuthorized>
                                <MudAlert Severity="Severity.Warning">
                                    <MudStack Justify="Justify.FlexStart" AlignItems="AlignItems.Start" Spacing="0">
                                        <MudText Typo="Typo.body1">
                                            Bạn cần xác thực thông tin để xem thông tin chi tiết
                                        </MudText>
                                        <MudButton Variant="Variant.Text"
                                                   Color="Color.Info"
                                                   FullWidth="false"
                                                   Size="Size.Small"
                                                   StartIcon="@Icons.Material.Filled.Verified"
                                                   OnClick="OpenAuthDialog">
                                            Xác thực
                                        </MudButton>
                                    </MudStack>
                                </MudAlert>
                            </NotAuthorized>
                        </AuthorizeView>
                    }
                }
            </MudStack>
        </MudItem>
        @if (!string.IsNullOrWhiteSpace(_serial))
        {
            <AuthorizeView>
                <Authorized>
                    @if (_isAuthSuccess)
                    {
                        <MudItem xs="12" md="6" lg="4">
                            <MudStack>
                                <ThongTinChuSuDung Serial="@_serial"/>
                                <ThongTinThuaDat Serial="@_serial"/>
                                <ThongTinTaiSan/>
                            </MudStack>
                        </MudItem>
                        <MudItem xs="12" md="6" lg="4">
                            <ThuaDatLocation Serial="@_serial"/>
                        </MudItem>
                    }
                </Authorized>
            </AuthorizeView>
        }
    </MudGrid>
</MudStack>
@inject IDialogService DialogService
@inject AppSettingsService AppSettingService
@inject IAuthService AuthService
@code {
    private string? _searchQuery;
    private string? _serial;
    private bool _isCameraActive;
    private bool _isAuthSuccess = true;
    private AppSettings? _appSettings;
    private string? _donVi;
    protected override void OnInitialized()
    {
        _appSettings = AppSettingService.AppSettings;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (string.IsNullOrWhiteSpace(_searchQuery))
               await AuthService.SetSerialElis(null);
        }
    }

    private async Task OpenAuthDialog()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true
        };
        var authorByChuSuDung = await DialogService.ShowAsync<XacThucNguoiDung>(null, options);
        var result = await authorByChuSuDung.Result;
        
        _isAuthSuccess = result is not null && !result.Canceled;
        
        StateHasChanged();
    }

    private void SearchBarResultChanged(string? searchQuery)
    {
        _searchQuery = searchQuery;
        if (!string.IsNullOrWhiteSpace(searchQuery)) return;
        _serial = null;
        StateHasChanged();
    }

}