@page "/"
@using Haihv.Elis.Tool.TraCuuGcn.WebLib.Services

<MudStack Class="mt-2 mx-2 mb-16" 
          Style="@(string.IsNullOrWhiteSpace(_searchQuery) && !_isCameraActive ? "height: calc((1 / 3)*(100vh - 50px))" : "")" 
          Justify="Justify.FlexEnd">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" md="6" lg="4">
            <MudStack>
                <SearchBar AutoStopCamera="true" 
                           IsCameraActiveChanged="b => _isCameraActive = b"
                           Result="@_searchQuery"
                           ResultChanged="SearchBarResultChanged"/>
                @if (!string.IsNullOrWhiteSpace(_searchQuery))
                { 
                    <ThongTinGiayChungNhan Query="@_searchQuery"
                                           @bind-Serial="@_serial"
                                           IsLdapUser="_isLdapUser"
                                           DonViChanged="donVi => _donVi = donVi"
                                           HasGiayChungNhanChanged="HasGiayChungNhanChanged"
                                           RefreshDataChanged="RefreshDataChanged"/>
                    @if (_appSettings is not null && _appSettings.IsDemoVersion && !string.IsNullOrWhiteSpace(_donVi))
                    {
                        <MudAlert Severity="Severity.Warning" ShowCloseIcon="true">
                            <MudText Typo="Typo.body2">
                                Hệ thống đang trong quá trình thử nghiệm, thông tin có thể không chính xác.
                            </MudText>
                            <MudStack Class="pt-1" Spacing="0">
                                <MudText Typo="Typo.caption">
                                    Vui lòng xác minh thông tin tại:
                                </MudText>
                                <MudText Typo="Typo.caption">
                                    @_donVi
                                </MudText>
                            </MudStack>
                        </MudAlert>
                    }
                    @if (!string.IsNullOrWhiteSpace(_serial))
                    {
                        <AuthorizeView>
                            <NotAuthorized>
                                <MudAlert Severity="Severity.Warning">
                                    <MudStack Justify="Justify.FlexStart" AlignItems="AlignItems.Start" Spacing="0">
                                        <MudText Typo="Typo.body1">
                                            Bạn cần xác thực thông tin để xem thông tin chi tiết
                                        </MudText>
                                        <MudButton Color="Color.Inherit" Href="/authentication/login">
                                            <MudText>Đăng nhập</MudText>
                                        </MudButton>
                                    </MudStack>
                                </MudAlert>
                            </NotAuthorized>
                            <Authorized>
                                @if (!string.IsNullOrWhiteSpace(_serial) && _hasGiayChungNhan && _countTaiSan > 3)
                                {
                                    <MudStack>
                                        <ThongTinChuSuDung Serial="@_serial"
                                                           HasGiayChungNhan="_hasGiayChungNhan"/>
                                        <ThongTinThuaDat Serial="@_serial"
                                                         HasGiayChungNhan="_hasGiayChungNhan"/>
                                    </MudStack>
                                }
                            </Authorized>
                        </AuthorizeView>
                    }
                }
            </MudStack>
        </MudItem>
        <AuthorizeView>
            <Authorized>
                @if (_hasGiayChungNhan && !string.IsNullOrWhiteSpace(_serial))
                {
                    <MudItem xs="12" md="6" lg="4">
                        @if (_countTaiSan > 3)
                        {
                            <ThongTinTaiSan Serial="@_serial"
                                            HasGiayChungNhan="_hasGiayChungNhan"
                                            CountChanged="CountChanged"/>
                        }
                        else
                        {
                            <MudStack>
                                <ThongTinChuSuDung Serial="@_serial"
                                                   HasGiayChungNhan="_hasGiayChungNhan"/>
                                <ThongTinThuaDat Serial="@_serial"
                                                 HasGiayChungNhan="_hasGiayChungNhan"/>
                                <ThongTinTaiSan Serial="@_serial"
                                                HasGiayChungNhan="_hasGiayChungNhan"
                                                CountChanged="CountChanged"/>
                            </MudStack>
                        }
                    </MudItem>
                    <MudItem xs="12" md="6" lg="4">
                        <ThuaDatLocation Serial="@_serial"
                                         HasGiayChungNhan="_hasGiayChungNhan"/>
                    </MudItem>
                }
            </Authorized>
        </AuthorizeView>
    </MudGrid>
</MudStack>

@implements IDisposable
@inject AppSettingsService AppSettingService
@inject AuthenticationStateProvider AuthenticationStateProvider
@code {
    private string? _searchQuery;
    private string? _serial;
    private bool _isCameraActive;
    private AppSettings? _appSettings;
    private bool _hasGiayChungNhan;
    private string? _donVi;
    private bool _isAuthenticated;
    private int _countTaiSan;

    protected override void OnInitialized()
    {
        _appSettings = AppSettingService.AppSettings;
        AuthenticationStateProvider.AuthenticationStateChanged += AuthenticationStateChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // if (string.IsNullOrWhiteSpace(_searchQuery))
            //     await AuthService.SetSerialElis(null);
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            AuthenticationStateChanged(Task.FromResult(authState));
            StateHasChanged();
        }
    }

    private void AuthenticationStateChanged(Task<AuthenticationState> task)
    {
        InvokeAsync(async () =>
        {
            var authState = await task;
            var wasAuthenticated = _isAuthenticated;
            _isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
            // _isLdapUser = await AuthService.IsLdapUser();
            
            // If authentication state changed, we need to refresh the UI
            if (wasAuthenticated != _isAuthenticated)
            {
                StateHasChanged();
            }
        });
    }
    
    private void SearchBarResultChanged(string? searchQuery)
    {
        if (string.Equals(_searchQuery, searchQuery, StringComparison.Ordinal)) return;
        _hasGiayChungNhan = false;
        _serial = null;
        _donVi = null;  
        _searchQuery = searchQuery;
        StateHasChanged();
    }

    private void HasGiayChungNhanChanged(bool hasGiayChungNhan)
    {
        if (!hasGiayChungNhan) return;
        _hasGiayChungNhan = true;
        StateHasChanged();
    }

    public void Dispose()
    {
        AuthenticationStateProvider.AuthenticationStateChanged -= AuthenticationStateChanged;
    }

    private Task RefreshDataChanged(bool refresh)
    {
        if (!refresh) return Task.CompletedTask;
        var searchQuery = _searchQuery;
        _searchQuery = null;
        _serial = null;
        _hasGiayChungNhan = false;
        _donVi = null;
        StateHasChanged();
        SearchBarResultChanged(searchQuery);
        return Task.CompletedTask;
    }

    private void CountChanged(int countTaiSan)
    {
        if (_countTaiSan == countTaiSan) return;
        _countTaiSan = countTaiSan;
        var hasChanged = (_countTaiSan > 3 && countTaiSan <= 3) || (_countTaiSan <= 3 && countTaiSan > 3);
        if (hasChanged)
            StateHasChanged();
    }
}