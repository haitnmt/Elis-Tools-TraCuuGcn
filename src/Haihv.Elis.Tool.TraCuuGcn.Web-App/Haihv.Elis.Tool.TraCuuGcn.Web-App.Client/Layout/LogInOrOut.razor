@implements IDisposable
@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

<div class="nav-item px-3">
    <AuthorizeView>
        <Authorized>
            <MudStack Row="true">
                <MudText>
                    @context.User.Identity?.Name
                </MudText>
                <form action="authentication/logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@_currentUrl" />
                    <MudTooltip Text="Đăng xuất">
                        <MudIconButton
                            Icon="@Icons.Material.Filled.Logout"
                            Size="Size.Small"
                            Color="Color.Inherit"
                            ButtonType="ButtonType.Submit"/>
                    </MudTooltip>
                </form>
            </MudStack>
        </Authorized>
        <NotAuthorized>
            <MudButton Color="Color.Inherit"
                       Href="/authentication/login">
                <MudText>Đăng nhập</MudText>
            </MudButton>
        </NotAuthorized>
    </AuthorizeView>
</div>
@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = Navigation.ToBaseRelativePath(Navigation.Uri);
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = Navigation.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}
