@using System.Net.Http.Json
@using Haihv.Elis.Tool.TraCuuGcn.Models
@if (_maQrInfo == null && _giayChungNhan == null)
{
    <MudAlert Severity="Severity.Error">Không có thông tin!</MudAlert>
}
else if(!string.IsNullOrWhiteSpace(_error))
{
    <MudAlert Severity="Severity.Error">@_error</MudAlert>
}
else
{
    <MudStack>
        @if(_maQrInfo == null)
        {
            <MudAlert Severity="Severity.Warning">Không có thông tin Mã Qr</MudAlert>
        }
        else
        {
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h6">Thông tin Mã Qr</MudText>
                    <MudDivider/>
                    <MudField Label="Thời gian khởi tạo" Variant="Variant.Text">
                        @_maQrInfo.ThoiGianKhoiTao.ToString("dd/MM/yyyy HH:mm:ss")
                    </MudField>
                    <MudField Label="Đơn vị in Giấy chứng nhận" Variant="Variant.Text">
                        @_maQrInfo.TenDonVi [@_maQrInfo.MaDonVi]
                    </MudField>
                    <MudField Label="Mã hồ sơ thủ tục hành chính" Variant="Variant.Text">
                        @_maQrInfo.MaHoSoTthc
                    </MudField>
                    <MudField Label="Số phát hành Giấy chứng nhận (Serial)" Variant="Variant.Text">
                        @_maQrInfo.SerialNumber
                    </MudField>
                </MudCardContent>
            </MudCard>
        }
        @if (_giayChungNhan == null)
        {
            <MudAlert Severity="Severity.Warning">Không có thông tin Giấy chứng nhận</MudAlert>
        }
        else
        {
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h6">Thông tin Giấy chứng nhận</MudText>
                    <MudDivider/>
                    <MudField Label="Số phát hành (Serial)" Variant="Variant.Text">
                        @_giayChungNhan.Serial
                    </MudField>
                    <MudField Label="Ngày ký" Variant="Variant.Text">
                        @_giayChungNhan.NgayKy.ToString("dd/MM/yyyy")
                    </MudField>
                    <MudField Label="Số vào sổ" Variant="Variant.Text">
                        @_giayChungNhan.SoVaoSo
                    </MudField>
                    <MudField Label="Diện tích" Variant="Variant.Text">
                        @(_giayChungNhan.DienTichRieng + _giayChungNhan.DienTichChung) m²
                    </MudField>
                </MudCardContent>
            </MudCard>
        }
    </MudStack>
}
@code {
    [Inject] protected IHttpClientFactory HttpClientFactory { get; set; } = null!;
    private HttpClient _httpClient = null!;
    [Parameter] public string? Query { get; set; }
    [Parameter] public string? Error { get; set; }
    [Parameter] public EventCallback<string?> ErrorChanged { get; set; }
    
    private const string Url = "/elis/search";
    private string? _query;
    private MaQrInfo? _maQrInfo;
    private GiayChungNhan? _giayChungNhan;
    private string? _error;

    protected override void OnInitialized()
    {
        _httpClient = HttpClientFactory.CreateClient("Auth");
    }
    
    protected override async Task OnParametersSetAsync()
    {
        if (Query == _query) return;
        _query = Query;
        await LoadDataAsync();
    }
    
    private async Task LoadDataAsync()
    {
        if (string.IsNullOrWhiteSpace(_query))
        {
            return;
        }
        var url = $"{Url}?query={_query}";
        try
        {
            var response = await _httpClient.GetFromJsonAsync<Response<GiayChungNhanWithMaQrInfo>>(url);
            if (response?.Value == null)
            {
                _error = "Không có thông tin Mã Qr";
                return;
            }
                    
            _maQrInfo = response.Value.MaQrInfo;
            _giayChungNhan = response.Value.GiayChungNhan;
            StateHasChanged();
        }
        catch (Exception e)
        {
            _error = e.Message;
            Console.WriteLine(e);
        }
    }

}