@using Haihv.Elis.Tool.TraCuuGcn.Models
<MudDialog>
    <TitleContent>
        <MudStack Row="true" AlignItems="AlignItems.End"> 
            <MudAvatar Color="Color.Warning" Variant="Variant.Outlined" Rounded="true">
                <MudIcon Icon="@Icons.Material.Filled.VerifiedUser"/>
            </MudAvatar>
            <MudText Typo="Typo.h6"
                     Color="Color.Warning">
                Xác thực người dùng
            </MudText>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudPaper Width="466px" MaxWidth="100%" Outlined="false" Elevation="0">
            <MudSelect T="string"
                       Label="Chọn kiểu xác thực"
                       Value="_textXacThuc" 
                       ValueChanged="ChonKieuXacThuc"
                       Dense="true">
                <MudSelectItem Value="@("Tài khoản nội bộ")">Tài khoản nội bộ</MudSelectItem>
                <MudSelectItem Value="@("Theo thông tin Chủ sử dụng đất")">Theo thông tin Chủ sử dụng đất</MudSelectItem>
            </MudSelect>
            @if (!_isUserLocal)
            {
                @if (string.IsNullOrWhiteSpace(_serial))
                {
                    <MudAlert Severity="Severity.Error">
                        <MudText Typo="Typo.body1">Bạn cần tìm kiếm, quét mã để có thông tin Giấy chứng nhận trước khi đăng nhập</MudText>
                    </MudAlert>
                }
                else
                {
                    <MudTextField Label="Số định danh"
                                  Variant="Variant.Text"
                                  HelperTextOnFocus="true"
                                  HelperText="Số căn cước, CCCD, CMND, Mã số doanh nghiệp,... in trên Giấy chứng nhận"
                                  Required="true"
                                  RequiredError="Số định danh không được để trống"
                                  @bind-Value="@_username"
                                  DebounceInterval="200" 
                                  OnDebounceIntervalElapsed="HandleIntervalElapsed"/>
                    <MudTextField Label="Tên chủ sử dụng"
                                  Variant="Variant.Text"
                                  HelperTextOnFocus="true"
                                  HelperText="Họ và tên chủ sử dụng, tên doanh nghiệp, người đại diện,... in trên Giấy chứng nhận"
                                  Required="true"
                                  RequiredError="Tên chủ sử dụng không được để trống"
                                  @bind-Value="@_password"
                                  DebounceInterval="200" 
                                  OnDebounceIntervalElapsed="HandleIntervalElapsed"/>
                }
            }
            else
            {
                <MudTextField Label="Tên đăng nhập"
                              Variant="Variant.Text"
                              HelperTextOnFocus="true"
                              HelperText="Tên đăng nhập trên hệ thống"
                              Required="true"
                              RequiredError="Tên đăng nhập không được để trống"
                              @bind-Value="@_username"
                              DebounceInterval="200"
                              OnDebounceIntervalElapsed="HandleIntervalElapsed"/>
                <MudTextField Label="Mật khẩu"
                              Variant="Variant.Text"
                              InputType="InputType.Password"
                              HelperTextOnFocus="true"
                              HelperText="Mật khẩu đăng nhập"
                              Required="true"
                              RequiredError="Mật khẩu không được để trống"
                              @bind-Value="@_password"
                              DebounceInterval="200"
                              OnDebounceIntervalElapsed="HandleIntervalElapsed"/>
            }
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text"
                   Color="Color.Secondary"
                   Disabled="_processing"
                   OnClick="MudDialog.Cancel">
            Hủy bỏ
        </MudButton>
        <MudButton
            Variant="Variant.Filled"
            Color="Color.Primary"
            Disabled="@(_processing || _disabledXacThuc)"
            OnClick="XacThuc">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Đang xác thực</MudText>
            }
            else
            {
                <MudText Typo="Typo.button">Xác thực</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>
@inject IAuthService AuthService
@inject ISnackbar SnackbarService
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;
    private string _textXacThuc = "Theo thông tin Chủ sử dụng đất";
    private string _username = string.Empty;
    private string _password = string.Empty;
    private string? _serial;
    private bool _isUserLocal;
    private bool _processing;
    private AuthResult? _authResult;
    private bool _disabledXacThuc = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _serial = await AuthService.GetSerialElis();
            _isUserLocal = string.IsNullOrWhiteSpace(_serial);
            _textXacThuc = _isUserLocal ? "Tài khoản nội bộ" : "Theo thông tin Chủ sử dụng đất";
            StateHasChanged();
        }
    }

    private async Task XacThuc()
    {
        _processing = true;
        if (string.IsNullOrWhiteSpace(_username) || string.IsNullOrWhiteSpace(_password))
        {
            _authResult = new AuthResult(false, 
                _isUserLocal ? 
                    "Tên đăng nhập và mật khẩu không được để trống" :
                    "Số định danh và tên chủ sử dụng không được để trống");
            SnackbarService.Add(_authResult.Error ?? string.Empty, Severity.Warning);
        }
        else
        {
            var message = _isUserLocal ? "Đăng nhập người dùng" : "Xác thực theo Chủ sử dụng";
            _authResult = _isUserLocal ? 
                await AuthService.LoginUser(new AuthUser(_username, _password)) :
                string.IsNullOrWhiteSpace(_serial) ? 
                    new AuthResult(false, "Không tìm thấy thông tin Giấy chứng nhận") :
                    await AuthService.LoginByChuSuDung(new AuthChuSuDung(_serial, _username, _password));
            if (_authResult.Success)
            {
                SnackbarService.Add($"{message} thành công", Severity.Success);
                MudDialog.Close(DialogResult.Ok(_serial));
            }
            else
            {
                SnackbarService.Add(_authResult.Error ?? string.Empty, Severity.Error);
            }
        }
        _processing = false;
        StateHasChanged();
    }

    private void ChonKieuXacThuc(string kieuXacThuc)
    {
        _isUserLocal = kieuXacThuc == "Tài khoản nội bộ";
        _textXacThuc = kieuXacThuc;
        StateHasChanged();
    }

    private void HandleIntervalElapsed(string obj)
    {
        _disabledXacThuc = string.IsNullOrWhiteSpace(_username) || string.IsNullOrWhiteSpace(_password);
    }

}