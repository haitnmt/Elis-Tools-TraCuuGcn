@using Haihv.Elis.Tool.TraCuuGcn.Models
<MudDialog>
    <TitleContent>
        <MudStack Row="true" AlignItems="AlignItems.End"> 
            <MudAvatar Color="Color.Warning" Variant="Variant.Outlined" Rounded="true">
                <MudIcon Icon="@Icons.Material.Filled.VerifiedUser"/>
            </MudAvatar>
            <MudText Typo="Typo.h6"
                     Color="Color.Warning">
                Xác thực người dùng
            </MudText>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudPaper Class="mt-n2" Width="389px" MaxWidth="100%" Outlined="false" Elevation="0">
            <MudSwitch Label="@(_isUserLocal ? "Tài khoản nội bộ" : "Theo thông tin Chủ sử dụng đất")"
                       @bind-Value="@_isUserLocal"
                       Color="Color.Primary"/>
            @if (!_isUserLocal)
            {
                
                    @if (_maGcnElis <= 0)
                    {
                        <MudAlert Severity="Severity.Error">
                            <MudText Typo="Typo.body1">Bạn cần tìm kiếm, quét mã để có thông tin Giấy chứng nhận trước khi đăng nhập</MudText>
                        </MudAlert>
                    }
                    else
                    {
                        <MudTextField Label="Số định danh"
                                      Variant="Variant.Text"
                                      HelperText="Số căn cước, CCCD, CMND, Mã số doanh nghiệp,... in trên Giấy chứng nhận"
                                      FullWidth="false"
                                      @bind-Value="@_username"/>
                        <MudTextField Label="Tên chủ sử dụng"
                                      Variant="Variant.Text"
                                      HelperText="Họ và tên chủ sử dụng, tên doanh nghiệp, người đại diện,... in trên Giấy chứng nhận"
                                      @bind-Value="@_password"/>
                    }
            }
            else
            {
                    <MudTextField Label="Tên đăng nhập"
                                  Variant="Variant.Text"
                                  HelperText="Tên đăng nhập trên hệ thống"
                                  @bind-Value="@_username"/>
                    <MudTextField Label="Mật khẩu"
                                  Variant="Variant.Text"
                                  InputType="InputType.Password"
                                  HelperText="Mật khẩu đăng nhập"
                                  @bind-Value="@_password"/>
            }
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text"
                   Color="Color.Secondary"
                   Disabled="_processing"
                   OnClick="MudDialog.Cancel">
            Hủy bỏ
        </MudButton>
        <MudButton
            Variant="Variant.Filled"
            Color="Color.Primary"
            Disabled="_processing"
            OnClick="XacThuc">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Đang xác thực</MudText>
            }
            else
            {
                <MudText Typo="Typo.button">Xác thực</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>
@inject IAuthService AuthService
@inject ISnackbar SnackbarService
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;
    private string _username = string.Empty;
    private string _password = string.Empty;
    private long _maGcnElis;
    private bool _isUserLocal;
    private bool _processing;
    private AuthResult? _authResult;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _maGcnElis = await AuthService.GetMaGcnElis();
            _isUserLocal = _maGcnElis <= 0;
            StateHasChanged();
        }
    }

    private async Task XacThuc()
    {
        _processing = true;
        if (string.IsNullOrWhiteSpace(_username) || string.IsNullOrWhiteSpace(_password))
        {
            
            _authResult = new AuthResult(false, 
                _isUserLocal ? 
                    "Tên đăng nhập và mật khẩu không được để trống" :
                    "Số định danh và tên chủ sử dụng không được để trống");
            SnackbarService.Add(_authResult.Error, Severity.Warning);
        }
        else
        {
            var message = _isUserLocal ? "Đăng nhập người dùng" : "Xác thực theo Chủ sử dụng";
            _authResult = _isUserLocal ? 
                await AuthService.LoginUser(new AuthUser(_username, _password)) :
                await AuthService.LoginByChuSuDung(new AuthChuSuDung(_maGcnElis, _username, _password));
            if (_authResult.Success)
            {
                SnackbarService.Add($"{message} thành công", Severity.Success);
                MudDialog.Close(DialogResult.Ok(_maGcnElis));
            }
            else
            {
                SnackbarService.Add(_authResult.Error, Severity.Error);
            }
        }
        _processing = false;
        StateHasChanged();
    }
}