@using Haihv.Elis.Tool.TraCuuGcn.Models
<MudDialog>
    <TitleContent>
        <MudStack Row="true" AlignItems="AlignItems.End"> 
            <MudAvatar Color="Color.Warning" Variant="Variant.Outlined" Rounded="true">
                <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Size="Size.Medium"/>
            </MudAvatar>
            <MudText Typo="Typo.h6"
                     Color="Color.Warning">
                Xác thực người dùng
            </MudText>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudTabs Elevation="2" 
                 Rounded="true" 
                 ApplyEffectsToContainer="true" 
                 PanelClass="pa-6"
                 ActivePanelIndexChanged="index => _isUserLocal = index == 1">
            <MudTabPanel Text="Thông tin Chủ sử dụng">
                @if(_maGcnElis <= 0)
                {
                    <MudAlert Severity="Severity.Error">
                        <MudText Typo="Typo.body1">Bạn cần tìm kiếm, quét mã để có thông tin Giấy chứng nhận trước khi đăng nhập</MudText>
                    </MudAlert>
                }
                else
                {
                    <MudTextField Label="Số định danh"
                                  Variant="Variant.Text"
                                  HelperText="Số căn cước, CCCD, CMND, Mã số doanh nghiệp,... in trên Giấy chứng nhận"
                                  FullWidth="false"
                                  @bind-Value="@_username"/>
                    <MudTextField Label="Tên chủ sử dụng"
                                  Variant="Variant.Text"
                                  HelperText="Họ và tên chủ sử dụng, tên doanh nghiệp, người đại diện,... in trên Giấy chứng nhận"
                                  @bind-Value="@_password"/>
                }
            </MudTabPanel>
            <MudTabPanel Text="Tài khoản nội bộ">
                <MudTextField Label="Tên đăng nhập"
                              Variant="Variant.Text"
                              HelperText="Tên đăng nhập trên hệ thống: ten_dang_nhap@vpdk.stnmt.bacninh.gov.vn"
                              @bind-Value="@_username"/>
                <MudTextField Label="Mật khẩu"
                              Variant="Variant.Text"
                              InputType="InputType.Password"
                              HelperText="Mật khẩu đăng nhập"
                              @bind-Value="@_password"/>
            </MudTabPanel>
        </MudTabs>
        @if (_authResult is not null && !_authResult.Success)
        {
            <MudAlert Severity="Severity.Error">
                <MudText Typo="Typo.body1">Xác thực không thành công</MudText>
                <MudText Typo="Typo.body2">@_authResult.Error</MudText>
            </MudAlert>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text"
                   Color="Color.Secondary"
                   Disabled="_processing"
                   OnClick="MudDialog.Cancel">
            Hủy bỏ
        </MudButton>
        <MudButton
            Variant="Variant.Filled"
            Color="Color.Primary"
            Disabled="_processing"
            OnClick="XacThuc">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Đang xác thực</MudText>
            }
            else
            {
                <MudText Typo="Typo.button">Xác thực</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>
@inject IAuthService AuthService
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;
    private string _username = string.Empty;
    private string _password = string.Empty;
    private long _maGcnElis;
    private bool _isUserLocal;
    private bool _processing;
    private AuthResult? _authResult;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _maGcnElis = await AuthService.GetMaGcnElis();
        }
    }

    private async Task XacThuc()
    {
        _processing = true;
        if (_isUserLocal)
        {
            if (string.IsNullOrWhiteSpace(_username) || string.IsNullOrWhiteSpace(_password))
            {
                _authResult = new AuthResult(false, "Tên đăng nhập và mật khẩu không được để trống");
                return;
            }
            _authResult = await AuthService.LoginUser(new AuthUser(_username, _password));
            if (_authResult.Success)
            {
                MudDialog.Close(DialogResult.Ok(_username));
            }
        }
        else
        {
            if (string.IsNullOrWhiteSpace(_username) || string.IsNullOrWhiteSpace(_password))
            {
                _authResult = new AuthResult(false, "Số định danh và tên chủ sử dụng không được để trống");
                return;
            }
            _authResult = await AuthService.LoginByChuSuDung(new AuthChuSuDung(_maGcnElis, _username, _password));
            if (_authResult.Success)
            {
                MudDialog.Close(DialogResult.Ok(_maGcnElis));
            }
        }

        _processing = false;
    }
}