@using System.Reflection
@if(!string.IsNullOrWhiteSpace(_version))
{
    <MudText Typo="Typo.caption">
        @_version
    </MudText>
}
@code 
{
    [Inject] private IHttpClientFactory HttpClientFactory { get; set; } = null!;
    [Inject] ISnackbar Snackbar { get; set; } = null!;
    private string? _version;
    protected override async Task OnInitializedAsync()
    {
        var appVersion = Assembly.GetExecutingAssembly().GetName().Version!.ToString();
        try
        {
            var client = HttpClientFactory.CreateClient("Endpoint");
            var response = await client.GetAsync("api/version");
            if (!response.IsSuccessStatusCode)
            {
                _version = $"Phiên bản: {appVersion}";
                return;
            }
            var apiVersion = await response.Content.ReadAsStringAsync();
            apiVersion = apiVersion.Replace('"', ' ').Trim();
            _version = $"Phiên bản: {appVersion} - {apiVersion}";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _version = $"Phiên bản: {appVersion}";
        }
    }
    
}