@using System.Net.Http.Json
@using Haihv.Elis.Tool.TraCuuGcn.Models
@if (HasGiayChungNhan)
{
    <AuthorizeView>
        <Authorized>
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h6">Thông tin chủ sử dụng</MudText>
                    @if (_isLoading)
                    {
                        <MudProgressLinear Color="Color.Success" Indeterminate="true"/>
                    }
                    else if (_chuSuDungInfos.Count == 0)
                    {
                        <MudAlert Severity="Severity.Error">
                            Không tìm thấy thông tin chủ sử dụng
                        </MudAlert>
                    }
                    else
                    {
                        if (_chuSuDungInfos.Count > 1)
                        {
                            <MudText Typo="Typo.caption">
                                Các chủ sử dụng đất:
                            </MudText>
                        }

                        @foreach (var chuSuDungInfo in _chuSuDungInfos)
                        {
                            <MudPaper Class="pa-4" Outlined="true" Elevation="1">
                                <MudGrid Spacing="2">
                                    <MudItem xs="7">
                                        <MudText Typo="Typo.body1">
                                            @chuSuDungInfo.ChuSuDung.Ten;
                                        </MudText>
                                    </MudItem>
                                    <MudItem xs="5">
                                        <MudText Typo="Typo.body1">
                                            @chuSuDungInfo.ChuSuDung.GiayTo
                                        </MudText>
                                    </MudItem>
                                    @if (chuSuDungInfo.ChuSuDungQuanHe != null)
                                    {
                                        <MudItem xs="7">
                                            <MudText Typo="Typo.body1">
                                                @chuSuDungInfo.ChuSuDungQuanHe.Ten;
                                            </MudText>
                                        </MudItem>
                                        <MudItem xs="5">
                                            <MudText Typo="Typo.body1">
                                                @chuSuDungInfo.ChuSuDungQuanHe.GiayTo
                                            </MudText>
                                        </MudItem>
                                    }
                                </MudGrid>
                            </MudPaper>
                        }
                    }
                </MudCardContent>
            </MudCard>
        </Authorized>
        <NotAuthorized>
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h6">Thông tin chủ sử dụng</MudText>
                    <MudDivider/>
                    <MudAlert Severity="Severity.Error">
                        Bạn không có quyền truy cập
                    </MudAlert>
                </MudCardContent>
            </MudCard>
        </NotAuthorized>
    </AuthorizeView>
}

@inject IAuthService AuthService

@code {
    [Parameter] public string? Serial { get; set; }
    [Parameter] public bool HasGiayChungNhan { get; set; }
    private HttpClient? _httpClient;
    private const string UrlGetThongTinChuSuDung = "/elis/chuSuDung";
    private List<ChuSuDungInfo> _chuSuDungInfos = [];
    private string? _error = string.Empty;
    private string? _serial;
    private bool _isLoading;

    protected override async Task OnParametersSetAsync()
    {
        if (!HasGiayChungNhan || (Serial == _serial && _chuSuDungInfos.Count > 0)) return;
        _serial = Serial;
        if (string.IsNullOrWhiteSpace(_serial))
        {
            HasGiayChungNhan = false;
            StateHasChanged();
        }
        else
        {
            await LoadDataAsync();
        }
    }

    private async Task LoadDataAsync()
    {
        if (string.IsNullOrWhiteSpace(_serial)) return;
        _error = null;
        _isLoading = true;
        StateHasChanged();
        _chuSuDungInfos = [];
        _httpClient ??= await AuthService.CreateHttpClient();
        var url = $"{UrlGetThongTinChuSuDung}?serial={_serial}";
        try
        {
            var response = await _httpClient.GetFromJsonAsync<Response<List<ChuSuDungInfo>>>(url);
            if (response?.Value is null)
            {
                _error = response?.ErrorMsg ?? "Không có thông tin Chủ sử dụng";
            }
            else
            {
                _chuSuDungInfos = response.Value;
            }
        }
        catch (Exception e)
        {
            _error = "Lỗi khi tải thông tin Chủ sử dụng";
            Console.WriteLine(e);
        }

        _isLoading = false;
        StateHasChanged();
    }

}