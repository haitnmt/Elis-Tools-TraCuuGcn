name: WebApp Build and Push docker image

on:
  push:  # Automatically run on commit
    branches:
      - main  # Chỉ chạy trên nhánh chính

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4.2.0
        
      # Read version from APP's .csproj file
      - name: Get version from APP .csproj
        id: get_version_app
        run: |
          csprojContent=$(cat src/Haihv.Elis.Tool.TraCuuGcn.Web-App/Haihv.Elis.Tool.TraCuuGcn.Web-App/Haihv.Elis.Tool.TraCuuGcn.Web-App.csproj)
          version=$(echo "$csprojContent" | grep -oP '(?<=<AssemblyVersion>)(.*?)(?=</AssemblyVersion>)')
          echo "VERSION_TAG=$version" >> $GITHUB_ENV
        shell: bash

      - name: Set image name
        run: echo "IMAGE_NAME=haitnmt/tracuugcn-app" >> $GITHUB_ENV

      - name: Check if Docker tag exists
        id: check_tag
        run: |
          if [[ $(docker manifest inspect ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} 2>/dev/null) ]]; then
            echo "Tag already exists. Skipping build."
            echo "BUILD=false" >> $GITHUB_ENV
          else
            echo "Tag does not exist. Proceeding with build."
            echo "BUILD=true" >> $GITHUB_ENV
          fi

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: '9.x' # Latest .NET version
      
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3.6.0

      - name: Login to docker hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6.1.0
        with:
          context: ./src
          file: ./src/DockerfileApp # Path to Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}, ${{ env.IMAGE_NAME }}:latest
          
      - name: Logout of docker hub
        run: docker logout